# Configuration file for the multitracer.cvr package (adjust values as needed)

# --- Data Checking Parameters ---
# List of column names that MUST be present in the main 'data.csv' files
# after loading. Used by check_and_prepare_data.
required_data_columns:
  - RID     # Unique individual ID, common to all their visits/scans
  - AGE     # Age at baseline
  - ScanDate    # Date of the scan
  - DX      # 0 if cognitively unimpaired, 1 otherwise
  - AB      # amyloid positivity (1 if TRUE, 0 if FALSE)

preprocessing:
  min_entries_per_id: 2
  id_column: "RID" # Column defining unique individuals
  criteria_source_file: "data"
  ignore_columns: ["idx", "inf_lat_vent", "lateral_ventricle", "choroid_plexus", 
  "cerebral_white_matter", "hippocampus",
"pallidum", "putamen", "caudate"]
  # --- Time Calculation Configuration ---
  # Option 1: Calculate from a date column
  date_column: "ScanDate"      # Primary column to look for (date format)
  date_format: "%m/%d/%Y"      # Optional: Specify format if not standard (e.g., "%Y%m%d")
  # Option 2: Use an existing relative time column
  relative_time_column: "years.from.baseline" # Secondary column (numeric years)
  # Final output column name
  time_output_column: "time"
  # Center the final 'time' variable around the mean per subject? (Recommended)
  center_time_variable: true

# --- Model Equations ---
# Formulas used in fevalMethod for model fitting. Stored as strings.
# Ensure variable names match those in your prepared data.
# eq_all: Model including group interaction (e.g., time:DX) for separation.
# eq_group: Model for within-group analysis (e.g., for sample size).
model_equations:
  eq_all_string: "value ~ time * AB + (time|RID)" #
  eq_group_string: "value ~ time + (time|RID)"    # Example within-group model

# --- Inclusion Criteria --- 
inclusion_criteria:
  CI: # Parameters for the 'Cognitively Impaired' group (DX=1)
    # inclusion criteria range
    AGE: [50, 90]
    MMSE: [20,30]
    GCDR: [0.5,1.0]
  CU: # Parameters for the 'Cognitively Unimpaired' group (DX=0)
    # inclusion criteria range
    AGE: [50, 85]
    MMSE: [25,30]
    GCDR: [0.0,0.0]

# --- Group-Specific Power Calculation Settings ---
power_params:
  CI: # Parameters for the 'Cognitively Impaired' group (DX=1)
    pct_change: 0.20
    # Time points for power calculation (e.g., baseline and 1.5 years)
    trial_time_points: [0, 1.5]
    power: 0.80
  CU: # Parameters for the 'Cognitively Unimpaired' group (DX=0)
    pct_change: 0.20
    # Time points for power calculation (e.g., baseline and 4.5 years)
    trial_time_points: [0, 4.5]
    power: 0.80
  # --- Add other groups here later if needed ---


# --- Genetic Algorithm Parameters ---
# Settings for the GA run by get_individual_fitness.
# These are examples; adjust based on your specific GA implementation and needs.
genetic_algorithm:
  popSize: 32           # Population size per generation. Time scales linearly.
  maxiter: 30          # Maximum number of generations (iterations) default 600. Time scales linearly.
  run: 100              # Early stopping if no fitness improvement in X generations default 100
  pmutation: 0.5        # Probability of mutation
  crossover: "gareal_blxCrossover"
  mutation: "gareal_raMutation"
  elitism_prop: 2       # Number of best individuals to carry over (elitism) 
  seed: 42               # Random seed for reproducibility
  parallel: FALSE        # Run in parallel processors. TRUE (all), FALSE, or number of processors to use.
  monitor: TRUE         # log each generation in the console. 

# --- Other Potential Flags (from original list, if needed later) ---
# Add these back if/when functions using them are implemented.
# Keep them commented out for now if unused.
# other_flags:
#   flag_only_sse: false
#   flag_onlyNAfill: false
#   flag_imputeDX: "max"   # Options: "BL", "max", "mode"
#   flag_imputeAB: "BL"    # Options: "BL", "max"
#   flag_restrict_search: "all" # Options: "all", "braak56", "top"
#   flag_gradient: false
#   flag_converters: "all" # Options: "mode", "all"
#   flag_subset: false
#   flag_run_DDS: false
#   flag_run_fixed: false
