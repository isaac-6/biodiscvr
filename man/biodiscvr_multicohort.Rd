% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/biodiscvr_multicohort.R
\name{biodiscvr_multicohort}
\alias{biodiscvr_multicohort}
\title{Run Multi-Cohort Biomarker Discovery (using a Genetic Algorithm by default)}
\usage{
biodiscvr_multicohort(
  preprocessed_data,
  datasets_to_run,
  group,
  config,
  features = NULL,
  fixed_numerator_regs = NULL,
  fixed_denominator_regs = NULL,
  min_bounds = NULL,
  max_bounds = NULL,
  var_composition = 1,
  reference_fitness = NULL,
  bilateral = TRUE,
  experiment_tag = NULL,
  output_csv_name = NULL,
  save_plot = FALSE,
  output_dir = NULL,
  ga_seed = NULL,
  ...
)
}
\arguments{
\item{preprocessed_data}{List. The output from \code{preprocess_datasets}, containing
the potentially filtered \verb{$data} list for multiple cohorts and \verb{$config}.}

\item{datasets_to_run}{Character vector. Names of the datasets within
\code{preprocessed_data} to include in the multi-cohort fitness evaluation.}

\item{group}{Character string. The group ("CU" or "CI") to use for evaluating
fitness via the internal \code{.calculate_fitness} function within each cohort.}

\item{config}{List. The loaded configuration object from \code{check_and_prepare_data}.}

\item{features}{Character vector. Names of columns in \code{data_suv_bi} frames
to be considered as features. If NULL (default), uses common numeric columns
(excluding ID) found across \emph{all} specified \code{datasets_to_run}.}

\item{fixed_numerator_regs}{fixed numerator regions.}

\item{fixed_denominator_regs}{fixed denominator regions.}

\item{min_bounds}{Numeric vector or single number. Lower bounds for GA parameters.
Length must match the number of features if specified as a vector. Defaults to 0.1.}

\item{max_bounds}{Numeric vector or single number. Upper bounds for GA parameters.
Length must match the number of features if specified as a vector. Defaults to 2.9.}

\item{var_composition}{Numeric. Parameter passed to \code{.calculate_fitness} indicating
how features are combined (e.g., 0 = volume-weighed, 1 = arithmetic mean).}

\item{reference_fitness}{Numeric vector or NULL. A vector of weights, one for
each dataset in \code{datasets_to_run}, used to calculate the weighted sum for
the aggregated fitness. If NULL (default), a warning is issued and weights
default to 1 for all datasets (simple sum/average). Must be the same length
as \code{datasets_to_run}.}

\item{bilateral}{Logical. Metadata flag. Defaults to TRUE.}

\item{experiment_tag}{Character string or NULL. Metadata tag.}

\item{output_csv_name}{Character string or NULL. Path to CSV file for appending
the main results (best solution, aggregated fitness). Directory created if needed.}

\item{save_plot}{Boolean, to choose if a plot of the search is saved (fitness vs generation)}

\item{output_dir}{Path to the output folder (to save csv, and plots)}

\item{ga_seed}{Numeric or NULL. Seed for GA.}

\item{...}{Additional arguments passed to \code{GA::ga}.}
}
\value{
A list containing:
\describe{
\item{ga_result_object}{The raw object returned by \code{GA::ga}.}
\item{best_solution}{A list containing the decoded best biomarker definition
(e.g., \code{numerator_regions}, \code{denominator_regions}, \code{chromosome_vector}).}
\item{aggregated_fitness}{The final aggregated fitness value (higher is better)
for the best solution.}
\item{result_row}{The data frame row written to \code{output_csv_name}.}
\item{per_dataset_metrics}{A data frame containing the detailed Rep, SepAB, SSE metrics
for the best solution evaluated on each individual dataset included in the run.}
}
Returns \code{NULL} if GA fails or setup issues occur.
}
\description{
Performs GA optimization for biomarker definitions, evaluating fitness based
on aggregated performance across multiple specified datasets. The GA aims
to maximize the aggregated fitness.
}
\details{
Optimizes a biomarker definition across multiple cohorts simultaneously.
\enumerate{
\item \strong{Setup:} Identifies common features across specified datasets.
\item \strong{Multi-Fitness Wrapper:} Defines a fitness function for \code{GA::ga}.
\itemize{
\item This function iterates through \code{datasets_to_run}.
\item For each dataset, it calls the internal \code{.calculate_fitness} function (higher score is better).
\item It calculates a weighted sum of the fitness scores using \code{reference_fitness} weights.
\item It returns this aggregated score directly to \code{GA::ga} (which maximizes).
}
\item \strong{GA Run:} Executes \code{GA::ga} using the multi-fitness wrapper. Assumes \code{real-valued} GA type.
\item \strong{Result Processing:} Decodes the best overall chromosome found using the same logic as \code{biodiscvr_single}.
\item \strong{Re-evaluation (Per Dataset):} Evaluates the \emph{best overall} chromosome on
\emph{each individual dataset} using \code{.feval_group} to get detailed Rep, SepAB,
SSE metrics specific to that dataset for the optimal biomarker.
\item \strong{Logging:} Appends the main result (best solution, aggregated fitness, datasets used)
to \code{output_csv_name} if provided.
\item \strong{Return:} Provides a list with the GA object, best solution details, final aggregated
fitness, the result row logged, and the detailed per-dataset metrics.
}

Ensure the internal \code{.calculate_fitness} and \code{.feval_group} functions exist within the package.
The logic for decoding the chromosome and calculating the biomarker value (likely via
an internal \code{.calculate_cvr} function as seen in \code{biodiscvr_single}) \emph{must} be consistent.
}
