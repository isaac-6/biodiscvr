% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/load_data.R
\name{load_datasets}
\alias{load_datasets}
\title{Load Datasets from a Structured Directory}
\usage{
load_datasets(root_path, verbose = TRUE)
}
\arguments{
\item{root_path}{Character string. The path to the main directory containing
the dataset subdirectories.}

\item{verbose}{Logical. If TRUE, print messages about which folders are being
processed and files loaded. Defaults to TRUE.}
}
\value{
A named list where:
\itemize{
\item Each name corresponds to a subdirectory name (dataset identifier).
\item Each element is itself a named list containing the loaded data frames.
Currently, the possible names within this inner list are 'data' (from
'data.csv') and 'data_suv_bi' (from 'data_suv_bi.csv'). If a file
is not found or fails to load for a given dataset, the corresponding
element will be missing from the inner list for that dataset.
Returns an empty list (\code{list()}) if \code{root_path} does not exist, is not a
directory, or contains no subdirectories with the target files.
}
}
\description{
Scans a root directory for subdirectories, each representing a dataset.
Within each dataset subdirectory, it attempts to load specific CSV files
('data.csv' and 'data_suv_bi.csv').
}
\examples{
# --- Setup Example Directory Structure ---
# (Usually you wouldn't do this inside examples, but it's needed here
#  for a self-contained, runnable example)
\dontrun{
  # Create a temporary root directory
  temp_root <- file.path(tempdir(), "my_datasets")
  if (dir.exists(temp_root)) unlink(temp_root, recursive = TRUE) # Clean up first
  dir.create(temp_root)

  # Create Dataset A
  dir_a <- file.path(temp_root, "dataset_A")
  dir.create(dir_a)
  write.csv(data.frame(id = 1:3, value = rnorm(3)),
            file.path(dir_a, "data.csv"), row.names = FALSE)
  write.csv(data.frame(id = 1:3, score = runif(3)),
            file.path(dir_a, "data_suv_bi.csv"), row.names = FALSE)

  # Create Dataset B (missing data_suv_bi.csv)
  dir_b <- file.path(temp_root, "dataset_B")
  dir.create(dir_b)
  write.csv(data.frame(id = 10:12, value = rnorm(3)),
            file.path(dir_b, "data.csv"), row.names = FALSE)

  # --- Load the Datasets ---
  all_data <- load_datasets(temp_root)

  # --- Access the Data ---
  # List loaded datasets
  print(names(all_data))

  # Access data.csv from dataset_A
  print(head(all_data$dataset_A$data))

  # Access data_suv_bi.csv from dataset_A
  print(head(all_data$dataset_A$data_suv_bi))

  # Access data.csv from dataset_B
  print(head(all_data$dataset_B$data))

  # Attempt to access missing file (will be NULL)
  print(all_data$dataset_B$data_suv_bi)

  # --- Clean Up ---
  unlink(temp_root, recursive = TRUE)
}

}
